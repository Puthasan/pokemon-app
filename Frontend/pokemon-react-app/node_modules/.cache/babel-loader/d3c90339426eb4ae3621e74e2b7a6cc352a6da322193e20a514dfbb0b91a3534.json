{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\modes\\\\Desktop\\\\pokemon-app\\\\frontend\\\\pokemon-react-app\\\\src\\\\pages\\\\HomePage.js\";\nimport { fetchDataAction } from \"../actions/index.js\"; // Import your action(s) here\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage({\n  data\n}) {\n  const fetchData = () => {\n    const id = Math.floor(Math.random() * 1302) + 1;\n    dispatch(fetchDataAction(id));\n  };\n  const typeEmojis = {\n    grass: \"üåø\",\n    fire: \"üî•\",\n    water: \"üíß\",\n    bug: \"üêû\",\n    normal: \"üßë\",\n    poison: \"‚ò†Ô∏è\",\n    electric: \"‚ö°\",\n    ground: \"üåç\",\n    fairy: \"üßö\",\n    fighting: \"ü•ä\",\n    psychic: \"üß†\",\n    rock: \"‚õ∞Ô∏è\",\n    ghost: \"üëª\",\n    ice: \"‚ùÑÔ∏è\",\n    dragon: \"üêâ\",\n    steel: \"üõ°Ô∏è\",\n    flying: \"üïäÔ∏è\",\n    dark: \"üåë\",\n    ghost: \"üëª\",\n    unknown: \"‚ùì\",\n    shadow: \"üë§\"\n    // Add more types and emojis as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Random Pokemon Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.sprite,\n        alt: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", data.name.charAt(0).toUpperCase() + data.name.substring(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type:\", \" \", Array.isArray(data.type) ? data.type.map((type, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [type, \" \", typeEmojis[type], \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this)) : `${data.type} ${typeEmojis[data.type]}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["fetchDataAction","useDispatch","jsxDEV","_jsxDEV","HomePage","data","fetchData","id","Math","floor","random","dispatch","typeEmojis","grass","fire","water","bug","normal","poison","electric","ground","fairy","fighting","psychic","rock","ghost","ice","dragon","steel","flying","dark","unknown","shadow","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","sprite","alt","name","charAt","toUpperCase","substring","Array","isArray","type","map","index","_c","$RefreshReg$"],"sources":["C:/Users/modes/Desktop/pokemon-app/frontend/pokemon-react-app/src/pages/HomePage.js"],"sourcesContent":["import { fetchDataAction } from \"../actions/index.js\"; // Import your action(s) here\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nfunction HomePage({data}) {\r\n  const fetchData = () => {\r\n    const id = Math.floor(Math.random() * 1302) + 1;\r\n    dispatch(fetchDataAction(id));\r\n  };\r\n\r\n  \r\n  const typeEmojis = {\r\n    grass: \"üåø\",\r\n    fire: \"üî•\",\r\n    water: \"üíß\",\r\n    bug: \"üêû\",\r\n    normal: \"üßë\",\r\n    poison: \"‚ò†Ô∏è\",\r\n    electric: \"‚ö°\",\r\n    ground: \"üåç\",\r\n    fairy: \"üßö\",\r\n    fighting: \"ü•ä\",\r\n    psychic: \"üß†\",\r\n    rock: \"‚õ∞Ô∏è\",\r\n    ghost: \"üëª\",\r\n    ice: \"‚ùÑÔ∏è\",\r\n    dragon: \"üêâ\",\r\n    steel: \"üõ°Ô∏è\",\r\n    flying: \"üïäÔ∏è\",\r\n    dark: \"üåë\",\r\n    ghost: \"üëª\",\r\n    unknown: \"‚ùì\",\r\n    shadow: \"üë§\",\r\n    // Add more types and emojis as needed\r\n  };\r\n\r\n\r\n  return(\r\n    <div>\r\n      <h1>Random Pokemon</h1>\r\n      <button onClick={fetchData}>Fetch Random Pokemon Data</button>\r\n      {data ? (\r\n        <div>\r\n          <img src={data.sprite} alt={data.name} />\r\n          <p>\r\n            Name: {data.name.charAt(0).toUpperCase() + data.name.substring(1)}\r\n          </p>\r\n          <p>\r\n            Type:{\" \"}\r\n            {Array.isArray(data.type)\r\n              ? data.type.map((type, index) => (\r\n                  <span key={index}>\r\n                    {type} {typeEmojis[type]}{\" \"}\r\n                  </span>\r\n                ))\r\n              : `${data.type} ${typeEmojis[data.type]}`}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}