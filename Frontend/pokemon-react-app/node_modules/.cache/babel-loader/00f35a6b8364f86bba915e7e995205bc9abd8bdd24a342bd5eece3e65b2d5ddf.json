{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\modes\\\\Desktop\\\\pokemon-app\\\\frontend\\\\pokemon-react-app\\\\src\\\\pages\\\\MyPokemon.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { retrieveCaughtPokemonAction } from \"../actions/catchPokemonAction\";\n// import { useSelector } from \"react-redux\";\n\n// function MyPokemon({ userId }) {\n//   const dispatch = useDispatch();\n//   const myCaughtPokemon = useSelector((state) => state.myCaughtPokemon);\n//   dispatch(retrieveCaughtPokemonAction(userId)).then((myCaughtPokemon) => {\n//     useSelector((state) => {state.myCaughtPokemon=myCaughtPokemon});\n//   });\n\n//   console.log(\"myCaughtPokemon\", myCaughtPokemon);\n\n//   return <div>MyPokemon</div>;\n// }\n\n// export default MyPokemon\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { retrieveCaughtPokemonAction } from \"../actions/catchPokemonAction\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPokemon({\n  userId\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const myCaughtPokemon = useSelector(state => state.myCaughtPokemon);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Wait for the dispatch to complete and get the data\n        const caughtPokemon = await dispatch(retrieveCaughtPokemonAction(userId));\n        // Dispatch an action to update the state with the fetched data\n        console.log(\"myCaughtPokemon\", myCaughtPokemon);\n        dispatch({\n          type: \"UPDATE_CAUGHT_POKEMON\",\n          payload: caughtPokemon\n        });\n      } catch (error) {\n        console.error(\"Error retrieving caught Pokemon\", error);\n      }\n    };\n    fetchData();\n  }, [dispatch, userId]);\n  if (!myCaughtPokemon) {\n    // You can show a loading spinner or message here while data is being fetched\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"MyPokemon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_s(MyPokemon, \"JTQXe/87jNIglL5lwguf/8EEgCI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MyPokemon;\nexport default MyPokemon;\nvar _c;\n$RefreshReg$(_c, \"MyPokemon\");","map":{"version":3,"names":["React","useEffect","useDispatch","retrieveCaughtPokemonAction","useSelector","jsxDEV","_jsxDEV","MyPokemon","userId","_s","dispatch","myCaughtPokemon","state","fetchData","caughtPokemon","console","log","type","payload","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/modes/Desktop/pokemon-app/frontend/pokemon-react-app/src/pages/MyPokemon.js"],"sourcesContent":["// import React from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { retrieveCaughtPokemonAction } from \"../actions/catchPokemonAction\";\r\n// import { useSelector } from \"react-redux\";\r\n\r\n// function MyPokemon({ userId }) {\r\n//   const dispatch = useDispatch();\r\n//   const myCaughtPokemon = useSelector((state) => state.myCaughtPokemon);\r\n//   dispatch(retrieveCaughtPokemonAction(userId)).then((myCaughtPokemon) => {\r\n//     useSelector((state) => {state.myCaughtPokemon=myCaughtPokemon});\r\n//   });\r\n\r\n//   console.log(\"myCaughtPokemon\", myCaughtPokemon);\r\n  \r\n\r\n\r\n  \r\n\r\n//   return <div>MyPokemon</div>;\r\n// }\r\n\r\n// export default MyPokemon\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { retrieveCaughtPokemonAction } from \"../actions/catchPokemonAction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction MyPokemon({ userId }) {\r\n  const dispatch = useDispatch();\r\n  const myCaughtPokemon = useSelector((state) => state.myCaughtPokemon);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Wait for the dispatch to complete and get the data\r\n        const caughtPokemon = await dispatch(retrieveCaughtPokemonAction(userId));\r\n        // Dispatch an action to update the state with the fetched data\r\n        console.log(\"myCaughtPokemon\", myCaughtPokemon);\r\n        dispatch({ type: \"UPDATE_CAUGHT_POKEMON\", payload: caughtPokemon });\r\n      } catch (error) {\r\n        console.error(\"Error retrieving caught Pokemon\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [dispatch, userId]);\r\n\r\n\r\n  if (!myCaughtPokemon) {\r\n    // You can show a loading spinner or message here while data is being fetched\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return <div>MyPokemon</div>;\r\n}\r\n\r\nexport default MyPokemon;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,2BAA2B,QAAQ,+BAA+B;AAC3E,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,SAASA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,eAAe,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EAErEV,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,aAAa,GAAG,MAAMJ,QAAQ,CAACP,2BAA2B,CAACK,MAAM,CAAC,CAAC;QACzE;QACAO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,eAAe,CAAC;QAC/CD,QAAQ,CAAC;UAAEO,IAAI,EAAE,uBAAuB;UAAEC,OAAO,EAAEJ;QAAc,CAAC,CAAC;MACrE,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,QAAQ,EAAEF,MAAM,CAAC,CAAC;EAGtB,IAAI,CAACG,eAAe,EAAE;IACpB;IACA,oBAAOL,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBAAOlB,OAAA;IAAAc,QAAA,EAAK;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC7B;AAACf,EAAA,CA3BQF,SAAS;EAAA,QACCL,WAAW,EACJE,WAAW;AAAA;AAAAqB,EAAA,GAF5BlB,SAAS;AA6BlB,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}