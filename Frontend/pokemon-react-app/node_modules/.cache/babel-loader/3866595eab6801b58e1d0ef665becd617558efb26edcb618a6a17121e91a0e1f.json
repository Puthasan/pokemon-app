{"ast":null,"code":"export const CATCH_POKEMON_REQUEST = 'CATCH_POKEMON_REQUEST';\nexport const CATCH_POKEMON_SUCCESS = 'CATCH_POKEMON_SUCCESS';\nexport const CATCH_POKEMON_FAILURE = 'CATCH_POKEMON_FAILURE';\nexport const catchPokemonRequest = () => ({\n  type: CATCH_POKEMON_REQUEST\n});\nexport const catchPokemonSuccess = isCaught => ({\n  type: CATCH_POKEMON_SUCCESS,\n  payload: isCaught\n});\nexport const catchPokemonFailure = error => ({\n  type: CATCH_POKEMON_FAILURE,\n  payload: error\n});\nexport const catchPokemonAction = () => async dispatch => {\n  try {\n    dispatch(catchPokemonRequest());\n\n    // Add your catch logic here\n    const isCaught = Math.random() < 0.5; // For example, 50% chance of success\n\n    dispatch(catchPokemonSuccess(isCaught));\n  } catch (error) {\n    dispatch(catchPokemonFailure(error.message));\n  }\n};","map":{"version":3,"names":["CATCH_POKEMON_REQUEST","CATCH_POKEMON_SUCCESS","CATCH_POKEMON_FAILURE","catchPokemonRequest","type","catchPokemonSuccess","isCaught","payload","catchPokemonFailure","error","catchPokemonAction","dispatch","Math","random","message"],"sources":["C:/Users/modes/Desktop/pokemon-app/frontend/pokemon-react-app/src/actions/catchPokemonAction.js"],"sourcesContent":["export const CATCH_POKEMON_REQUEST = 'CATCH_POKEMON_REQUEST';\r\nexport const CATCH_POKEMON_SUCCESS = 'CATCH_POKEMON_SUCCESS';\r\nexport const CATCH_POKEMON_FAILURE = 'CATCH_POKEMON_FAILURE';\r\n\r\nexport const catchPokemonRequest = () => ({\r\n  type: CATCH_POKEMON_REQUEST,\r\n});\r\n\r\nexport const catchPokemonSuccess = (isCaught) => ({\r\n  type: CATCH_POKEMON_SUCCESS,\r\n  payload: isCaught,\r\n});\r\n\r\nexport const catchPokemonFailure = (error) => ({\r\n  type: CATCH_POKEMON_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const catchPokemonAction = () => async (dispatch) => {\r\n  try {\r\n    dispatch(catchPokemonRequest());\r\n\r\n\r\n\r\n    // Add your catch logic here\r\n    const isCaught = Math.random() < 0.5; // For example, 50% chance of success\r\n\r\n    dispatch(catchPokemonSuccess(isCaught));\r\n  } catch (error) {\r\n    dispatch(catchPokemonFailure(error.message));\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAE5D,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,MAAO;EACxCC,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,OAAO,MAAMK,mBAAmB,GAAIC,QAAQ,KAAM;EAChDF,IAAI,EAAEH,qBAAqB;EAC3BM,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,mBAAmB,GAAIC,KAAK,KAAM;EAC7CL,IAAI,EAAEF,qBAAqB;EAC3BK,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACFA,QAAQ,CAACR,mBAAmB,CAAC,CAAC,CAAC;;IAI/B;IACA,MAAMG,QAAQ,GAAGM,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;;IAEtCF,QAAQ,CAACN,mBAAmB,CAACC,QAAQ,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdE,QAAQ,CAACH,mBAAmB,CAACC,KAAK,CAACK,OAAO,CAAC,CAAC;EAC9C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}