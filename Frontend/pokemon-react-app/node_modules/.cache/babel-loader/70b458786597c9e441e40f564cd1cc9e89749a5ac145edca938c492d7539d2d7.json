{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\modes\\\\Desktop\\\\pokemon-app\\\\frontend\\\\pokemon-react-app\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport { fetchDataAction } from \"../actions/fetchPokemonAction\"; // Import your action(s) here\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage({\n  data\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const fetchData = () => {\n    if (pokemonName.trim() !== \"\") {\n      // Only dispatch if the input is not empty\n      dispatch(fetchDataAction(pokemonName));\n    }\n  };\n}\n_s(HomePage, \"RElwu3RJqLfZvoROnGcRmACdgik=\", false, function () {\n  return [useDispatch];\n});\n_c = HomePage;\nconst handleInputChange = event => {\n  setPokemonName(event.target.value);\n  const typeEmojis = {\n    grass: \"üåø\",\n    fire: \"üî•\",\n    water: \"üíß\",\n    bug: \"üêû\",\n    normal: \"üßë\",\n    poison: \"‚ò†Ô∏è\",\n    electric: \"‚ö°\",\n    ground: \"üåç\",\n    fairy: \"üßö\",\n    fighting: \"ü•ä\",\n    psychic: \"üß†\",\n    rock: \"‚õ∞Ô∏è\",\n    ghost: \"üëª\",\n    ice: \"‚ùÑÔ∏è\",\n    dragon: \"üêâ\",\n    steel: \"üõ°Ô∏è\",\n    flying: \"üïäÔ∏è\",\n    dark: \"üåë\",\n    ghost: \"üëª\",\n    unknown: \"‚ùì\",\n    shadow: \"üë§\"\n    // Add more types and emojis as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pok\\xE9dex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter Pok\\xE9mon Name or ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: pokemonName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Search Pok\\xE9mon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.sprite,\n        alt: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", data.name.charAt(0).toUpperCase() + data.name.substring(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type:\", \" \", Array.isArray(data.type) ? data.type.map((type, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [type, \" \", typeEmojis[type], \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)) : `${data.type} ${typeEmojis[data.type]}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a Pok\\xE9mon name or ID and click \\\"Search Pok\\xE9mon\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["fetchDataAction","useDispatch","useState","jsxDEV","_jsxDEV","HomePage","data","_s","dispatch","pokemonName","setPokemonName","fetchData","trim","_c","handleInputChange","event","target","value","typeEmojis","grass","fire","water","bug","normal","poison","electric","ground","fairy","fighting","psychic","rock","ghost","ice","dragon","steel","flying","dark","unknown","shadow","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","src","sprite","alt","name","charAt","toUpperCase","substring","Array","isArray","map","index","$RefreshReg$"],"sources":["C:/Users/modes/Desktop/pokemon-app/frontend/pokemon-react-app/src/pages/HomePage.js"],"sourcesContent":["import { fetchDataAction } from \"../actions/fetchPokemonAction\"; // Import your action(s) here\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction HomePage({data}) {\r\n  const dispatch = useDispatch();\r\n  const [pokemonName, setPokemonName] = useState(\"\");\r\n\r\n  const fetchData = () => {\r\n    \r\n    if (pokemonName.trim() !== \"\") {\r\n      // Only dispatch if the input is not empty\r\n      dispatch(fetchDataAction(pokemonName));\r\n    }\r\n  };\r\n}\r\n  \r\nconst handleInputChange = (event) => {\r\n  setPokemonName(event.target.value);\r\n  \r\n  const typeEmojis = {\r\n    grass: \"üåø\",\r\n    fire: \"üî•\",\r\n    water: \"üíß\",\r\n    bug: \"üêû\",\r\n    normal: \"üßë\",\r\n    poison: \"‚ò†Ô∏è\",\r\n    electric: \"‚ö°\",\r\n    ground: \"üåç\",\r\n    fairy: \"üßö\",\r\n    fighting: \"ü•ä\",\r\n    psychic: \"üß†\",\r\n    rock: \"‚õ∞Ô∏è\",\r\n    ghost: \"üëª\",\r\n    ice: \"‚ùÑÔ∏è\",\r\n    dragon: \"üêâ\",\r\n    steel: \"üõ°Ô∏è\",\r\n    flying: \"üïäÔ∏è\",\r\n    dark: \"üåë\",\r\n    ghost: \"üëª\",\r\n    unknown: \"‚ùì\",\r\n    shadow: \"üë§\",\r\n    // Add more types and emojis as needed\r\n  };\r\n  \r\n  \r\n  return(\r\n    <div>\r\n    <h1>Pok√©dex</h1>\r\n    <label>\r\n      Enter Pok√©mon Name or ID:\r\n      <input type=\"text\" value={pokemonName} onChange={handleInputChange} />\r\n    </label>\r\n    <button onClick={fetchData}>Search Pok√©mon</button>\r\n    {data ? (\r\n      <div>\r\n        <img src={data.sprite} alt={data.name} />\r\n        <p>\r\n          Name: {data.name.charAt(0).toUpperCase() + data.name.substring(1)}\r\n        </p>\r\n        <p>\r\n          Type:{\" \"}\r\n          {Array.isArray(data.type)\r\n            ? data.type.map((type, index) => (\r\n              <span key={index}>\r\n                  {type} {typeEmojis[type]}{\" \"}\r\n                </span>\r\n              ))\r\n              : `${data.type} ${typeEmojis[data.type]}`}\r\n        </p>\r\n      </div>\r\n    ) : (\r\n      <p>Enter a Pok√©mon name or ID and click \"Search Pok√©mon\"</p>\r\n      )}\r\n  </div>\r\n);\r\n};\r\n\r\n\r\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}