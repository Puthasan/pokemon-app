{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\modes\\\\Desktop\\\\pokemon-app\\\\frontend\\\\pokemon-react-app\\\\src\\\\pages\\\\MyPokemon.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { retrieveCaughtPokemonAction } from \"../actions/catchPokemonAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPokemon = ({\n  userId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [pokemonCaught, setPokemonCaught] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await dispatch(retrieveCaughtPokemonAction(userId));\n        if (data && Array.isArray(data)) {\n          setPokemonCaught(data);\n        } else {\n          console.error(\"Invalid data format:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [dispatch, userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Pok\\xE9mon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), pokemonCaught.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pokemonCaught.map(pokemon => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `${pokemon.caught_by_user} ${pokemon.pokemon_name} ${pokemon.url_to_sprite}`\n      }, pokemon._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Pok\\xE9mon caught.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPokemon, \"PZbRbOqUeGoCyjBm3GANu5Phu94=\", false, function () {\n  return [useDispatch];\n});\n_c = MyPokemon;\nexport default MyPokemon;\nvar _c;\n$RefreshReg$(_c, \"MyPokemon\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","retrieveCaughtPokemonAction","jsxDEV","_jsxDEV","MyPokemon","userId","_s","dispatch","pokemonCaught","setPokemonCaught","fetchData","data","Array","isArray","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pokemon","caught_by_user","pokemon_name","url_to_sprite","_id","_c","$RefreshReg$"],"sources":["C:/Users/modes/Desktop/pokemon-app/frontend/pokemon-react-app/src/pages/MyPokemon.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { retrieveCaughtPokemonAction } from \"../actions/catchPokemonAction\";\r\n\r\nconst MyPokemon = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n  const [pokemonCaught, setPokemonCaught] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await dispatch(retrieveCaughtPokemonAction(userId));\r\n        if (data && Array.isArray(data)) {\r\n          setPokemonCaught(data);\r\n          \r\n        } else {\r\n          console.error(\"Invalid data format:\", data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [dispatch, userId]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Pokémon</h1>\r\n      {pokemonCaught.length > 0 ? (\r\n        <ul>\r\n          {pokemonCaught.map((pokemon) => (\r\n            <li key={pokemon._id}>\r\n              {`${pokemon.caught_by_user} ${pokemon.pokemon_name} ${pokemon.url_to_sprite}`}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No Pokémon caught.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPokemon;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,2BAA2B,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACN,2BAA2B,CAACI,MAAM,CAAC,CAAC;QAChE,IAAIM,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;UAC/BF,gBAAgB,CAACE,IAAI,CAAC;QAExB,CAAC,MAAM;UACLG,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEJ,IAAI,CAAC;QAC7C;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,QAAQ,EAAEF,MAAM,CAAC,CAAC;EAEtB,oBACEF,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBZ,aAAa,CAACa,MAAM,GAAG,CAAC,gBACvBlB,OAAA;MAAAa,QAAA,EACGR,aAAa,CAACc,GAAG,CAAEC,OAAO,iBACzBpB,OAAA;QAAAa,QAAA,EACI,GAAEO,OAAO,CAACC,cAAe,IAAGD,OAAO,CAACE,YAAa,IAAGF,OAAO,CAACG,aAAc;MAAC,GADtEH,OAAO,CAACI,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELjB,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCIF,SAAS;EAAA,QACIJ,WAAW;AAAA;AAAA4B,EAAA,GADxBxB,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}