{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\modes\\\\Desktop\\\\pokemon-app\\\\frontend\\\\pokemon-react-app\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport { fetchDataAction } from \"../actions/fetchPokemonAction\"; // Import your action(s) here\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage({\n  data\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const fetchData = () => {\n    if (pokemonName.trim() !== \"\") {\n      // Only dispatch if the input is not empty\n      dispatch(fetchDataAction(pokemonName));\n    }\n  };\n  const handleInputChange = event => {\n    setPokemonName(event.target.value);\n    const typeEmojis = {\n      grass: \"üåø\",\n      fire: \"üî•\",\n      water: \"üíß\",\n      bug: \"üêû\",\n      normal: \"üßë\",\n      poison: \"‚ò†Ô∏è\",\n      electric: \"‚ö°\",\n      ground: \"üåç\",\n      fairy: \"üßö\",\n      fighting: \"ü•ä\",\n      psychic: \"üß†\",\n      rock: \"‚õ∞Ô∏è\",\n      ghost: \"üëª\",\n      ice: \"‚ùÑÔ∏è\",\n      dragon: \"üêâ\",\n      steel: \"üõ°Ô∏è\",\n      flying: \"üïäÔ∏è\",\n      dark: \"üåë\",\n      ghost: \"üëª\",\n      unknown: \"‚ùì\",\n      shadow: \"üë§\"\n      // Add more types and emojis as needed\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pok\\xE9dex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Pok\\xE9mon Name or ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: pokemonName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"Search Pok\\xE9mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.sprite,\n          alt: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", data.name.charAt(0).toUpperCase() + data.name.substring(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type:\", \" \", Array.isArray(data.type) ? data.type.map((type, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [type, \" \", typeEmojis[type], \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)) : `${data.type} ${typeEmojis[data.type]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a Pok\\xE9mon name or ID and click \\\"Search Pok\\xE9mon\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this);\n  };\n}\n_s(HomePage, \"RElwu3RJqLfZvoROnGcRmACdgik=\", false, function () {\n  return [useDispatch];\n});\n_c = HomePage;\n;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["fetchDataAction","useDispatch","useState","jsxDEV","_jsxDEV","HomePage","data","_s","dispatch","pokemonName","setPokemonName","fetchData","trim","handleInputChange","event","target","value","typeEmojis","grass","fire","water","bug","normal","poison","electric","ground","fairy","fighting","psychic","rock","ghost","ice","dragon","steel","flying","dark","unknown","shadow","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","src","sprite","alt","name","charAt","toUpperCase","substring","Array","isArray","map","index","_c","$RefreshReg$"],"sources":["C:/Users/modes/Desktop/pokemon-app/frontend/pokemon-react-app/src/pages/HomePage.js"],"sourcesContent":["import { fetchDataAction } from \"../actions/fetchPokemonAction\"; // Import your action(s) here\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction HomePage({data}) {\r\n  const dispatch = useDispatch();\r\n  const [pokemonName, setPokemonName] = useState(\"\");\r\n\r\n  const fetchData = () => {\r\n    \r\n    if (pokemonName.trim() !== \"\") {\r\n      // Only dispatch if the input is not empty\r\n      dispatch(fetchDataAction(pokemonName));\r\n    }\r\n  };\r\n  \r\n  const handleInputChange = (event) => {\r\n  setPokemonName(event.target.value);\r\n  \r\n  const typeEmojis = {\r\n    grass: \"üåø\",\r\n    fire: \"üî•\",\r\n    water: \"üíß\",\r\n    bug: \"üêû\",\r\n    normal: \"üßë\",\r\n    poison: \"‚ò†Ô∏è\",\r\n    electric: \"‚ö°\",\r\n    ground: \"üåç\",\r\n    fairy: \"üßö\",\r\n    fighting: \"ü•ä\",\r\n    psychic: \"üß†\",\r\n    rock: \"‚õ∞Ô∏è\",\r\n    ghost: \"üëª\",\r\n    ice: \"‚ùÑÔ∏è\",\r\n    dragon: \"üêâ\",\r\n    steel: \"üõ°Ô∏è\",\r\n    flying: \"üïäÔ∏è\",\r\n    dark: \"üåë\",\r\n    ghost: \"üëª\",\r\n    unknown: \"‚ùì\",\r\n    shadow: \"üë§\",\r\n    // Add more types and emojis as needed\r\n  };\r\n  \r\n  \r\n  return(\r\n    <div>\r\n    <h1>Pok√©dex</h1>\r\n    <label>\r\n      Enter Pok√©mon Name or ID:\r\n      <input type=\"text\" value={pokemonName} onChange={handleInputChange} />\r\n    </label>\r\n    <button onClick={fetchData}>Search Pok√©mon</button>\r\n    {data ? (\r\n      <div>\r\n        <img src={data.sprite} alt={data.name} />\r\n        <p>\r\n          Name: {data.name.charAt(0).toUpperCase() + data.name.substring(1)}\r\n        </p>\r\n        <p>\r\n          Type:{\" \"}\r\n          {Array.isArray(data.type)\r\n            ? data.type.map((type, index) => (\r\n              <span key={index}>\r\n                  {type} {typeEmojis[type]}{\" \"}\r\n                </span>\r\n              ))\r\n              : `${data.type} ${typeEmojis[data.type]}`}\r\n        </p>\r\n      </div>\r\n    ) : (\r\n      <p>Enter a Pok√©mon name or ID and click \"Search Pok√©mon\"</p>\r\n      )}\r\n  </div>\r\n);\r\n}\r\n};\r\n\r\n\r\nexport default HomePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}