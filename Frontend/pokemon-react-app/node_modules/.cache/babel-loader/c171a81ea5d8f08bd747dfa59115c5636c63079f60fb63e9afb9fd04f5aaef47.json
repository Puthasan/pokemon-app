{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\modes\\\\Desktop\\\\pokemon-app\\\\frontend\\\\pokemon-react-app\\\\src\\\\pages\\\\MyPokemon.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport catchPokemonAction from \"../actions\";\nimport { retrieveCaughtPokemonAction } from \"../actions/catchPokemonAction\";\nimport { state } from \"../store/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPokemon({\n  data\n}) {\n  _s();\n  const dispatch = useDispatch();\n  // Assuming your Redux store has a 'myPokemon' slice that contains the caught Pokémon\n  const myCaughtPokemons = () => {\n    const pokemonId = data._id;\n    const pokemonName = data.name;\n    const pokemonSprite = data.sprite;\n    const caught_by_user = userId;\n    dispatch(catchPokemonAction(pokemonId, pokemonName, pokemonSprite, caught_by_user));\n    if (catchResult) {\n      dispatch(addCaughtPokemonAction(pokemonId, pokemonName, pokemonSprite, caught_by_user));\n    }\n  };\n  // dispatch(retrieveCaughtPokemonAction(userId)).then((res) => {console.log(\"dispatched\", res)});\n  // console.log(\"pokemonCaught\", pokemonCaught);\n  // console.log(\"caughtPokemon\", caughtPokemon);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Pok\\xE9mon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"(this is supposed to display stored pokemon)\", myCaughtPokemons()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(MyPokemon, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = MyPokemon;\nexport default MyPokemon;\nvar _c;\n$RefreshReg$(_c, \"MyPokemon\");","map":{"version":3,"names":["React","useSelector","useDispatch","catchPokemonAction","retrieveCaughtPokemonAction","state","jsxDEV","_jsxDEV","MyPokemon","data","_s","dispatch","myCaughtPokemons","pokemonId","_id","pokemonName","name","pokemonSprite","sprite","caught_by_user","userId","catchResult","addCaughtPokemonAction","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/modes/Desktop/pokemon-app/frontend/pokemon-react-app/src/pages/MyPokemon.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport catchPokemonAction from \"../actions\";\r\nimport { retrieveCaughtPokemonAction } from \"../actions/catchPokemonAction\";\r\nimport {state} from \"../store/index.js\"\r\n\r\nfunction MyPokemon({ data }) {\r\n  const dispatch = useDispatch();\r\n  // Assuming your Redux store has a 'myPokemon' slice that contains the caught Pokémon\r\n  const myCaughtPokemons = () => {\r\n    const pokemonId = data._id\r\n    const pokemonName = data.name;\r\n    const pokemonSprite = data.sprite\r\n    const caught_by_user = userId;\r\n\r\n    dispatch(catchPokemonAction( pokemonId, pokemonName, pokemonSprite, caught_by_user ));\r\n    if (catchResult) {\r\n      dispatch(addCaughtPokemonAction( pokemonId, pokemonName, pokemonSprite, caught_by_user ));\r\n    }\r\n  }\r\n  // dispatch(retrieveCaughtPokemonAction(userId)).then((res) => {console.log(\"dispatched\", res)});\r\n  // console.log(\"pokemonCaught\", pokemonCaught);\r\n  // console.log(\"caughtPokemon\", caughtPokemon);\r\n  return (\r\n    <div>\r\n      <h1>My Pokémon</h1>\r\n      <li>\r\n        (this is supposed to display stored pokemon)\r\n        {myCaughtPokemons()}\r\n      </li>\r\n        {/* <ul>\r\n          {caughtPokemon.map((pokemon) => (\r\n            <li key={pokemon.pokemon_id}>\r\n              {pokemon.pokemon_name}\r\n              </li>\r\n          ))}\r\n        </ul> */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPokemon;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,kBAAkB,MAAM,YAAY;AAC3C,SAASC,2BAA2B,QAAQ,+BAA+B;AAC3E,SAAQC,KAAK,QAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAGJ,IAAI,CAACK,GAAG;IAC1B,MAAMC,WAAW,GAAGN,IAAI,CAACO,IAAI;IAC7B,MAAMC,aAAa,GAAGR,IAAI,CAACS,MAAM;IACjC,MAAMC,cAAc,GAAGC,MAAM;IAE7BT,QAAQ,CAACR,kBAAkB,CAAEU,SAAS,EAAEE,WAAW,EAAEE,aAAa,EAAEE,cAAe,CAAC,CAAC;IACrF,IAAIE,WAAW,EAAE;MACfV,QAAQ,CAACW,sBAAsB,CAAET,SAAS,EAAEE,WAAW,EAAEE,aAAa,EAAEE,cAAe,CAAC,CAAC;IAC3F;EACF,CAAC;EACD;EACA;EACA;EACA,oBACEZ,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBpB,OAAA;MAAAgB,QAAA,GAAI,8CAEF,EAACX,gBAAgB,CAAC,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASF,CAAC;AAEV;AAACjB,EAAA,CAlCQF,SAAS;EAAA,QACCN,WAAW;AAAA;AAAA0B,EAAA,GADrBpB,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}