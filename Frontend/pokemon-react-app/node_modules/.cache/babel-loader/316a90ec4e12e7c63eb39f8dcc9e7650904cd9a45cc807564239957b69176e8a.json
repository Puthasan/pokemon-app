{"ast":null,"code":"import axios from \"axios\";\nexport const CATCH_POKEMON_REQUEST = 'CATCH_POKEMON_REQUEST';\nexport const CATCH_POKEMON_SUCCESS = 'CATCH_POKEMON_SUCCESS';\nexport const CATCH_POKEMON_FAILURE = 'CATCH_POKEMON_FAILURE';\nexport const RETRIEVE_POKEMON_SUCCESS = 'RETRIEVE_POKEMON_SUCCESS';\nexport const RETRIEVE_POKEMON_FAILURE = 'RETRIEVE_POKEMON_FAILURE';\nexport const UPDATE_CAUGHT_POKEMON = 'UPDATE_CAUGHT_POKEMON';\nexport const updateCaughtPokemonAction = data => ({});\nexport const retrievePokemonSuccess = data => ({\n  type: RETRIEVE_POKEMON_SUCCESS,\n  payload: data\n});\nexport const retrievePokemonFailure = error => ({\n  type: RETRIEVE_POKEMON_FAILURE,\n  payload: error\n});\nexport const catchPokemonRequest = () => ({\n  type: CATCH_POKEMON_REQUEST\n});\nexport const catchPokemonSuccess = isCaught => ({\n  type: CATCH_POKEMON_SUCCESS,\n  payload: isCaught\n});\nexport const catchPokemonFailure = error => ({\n  type: CATCH_POKEMON_FAILURE,\n  payload: error\n});\nexport const retrieveCaughtPokemonAction = caught_by_user => async dispatch => {\n  try {\n    dispatch(catchPokemonRequest());\n    const res = await axios.get(\"http://localhost:3001/api/caughtPokemon\", {\n      caught_by_user: caught_by_user\n    });\n    const data = await res.json();\n    dispatch(retrievePokemonSuccess(data));\n    // return res.data\n  } catch (error) {\n    dispatch(retrievePokemonFailure(error.message));\n  }\n};\nexport const catchPokemonAction = (pokemonId, pokemonName, pokemonSprite, caught_by_user) => async dispatch => {\n  try {\n    dispatch(catchPokemonRequest());\n\n    // console.log(\"in catchPokemonAction\");\n    // console.log(pokemonId, pokemonName, pokemonSprite, caught_by_user);\n\n    const res = await axios.post(\"http://localhost:3001/api/caughtPokemon\", {\n      pokemon_name: pokemonName,\n      pokemon_id: pokemonId,\n      url_to_sprite: pokemonSprite,\n      caught_by_user: caught_by_user\n    });\n\n    // console.log(res.data);\n    // setUser(res.data);\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  //   // Add your catch logic here\n  //   const isCaught = Math.random() < 0.5; // For example, 50% chance of success\n\n  //   dispatch(catchPokemonSuccess(isCaught));\n  // } catch (error) {\n  //   dispatch(catchPokemonFailure(error.message));\n  // }\n};","map":{"version":3,"names":["axios","CATCH_POKEMON_REQUEST","CATCH_POKEMON_SUCCESS","CATCH_POKEMON_FAILURE","RETRIEVE_POKEMON_SUCCESS","RETRIEVE_POKEMON_FAILURE","UPDATE_CAUGHT_POKEMON","updateCaughtPokemonAction","data","retrievePokemonSuccess","type","payload","retrievePokemonFailure","error","catchPokemonRequest","catchPokemonSuccess","isCaught","catchPokemonFailure","retrieveCaughtPokemonAction","caught_by_user","dispatch","res","get","json","message","catchPokemonAction","pokemonId","pokemonName","pokemonSprite","post","pokemon_name","pokemon_id","url_to_sprite","console","log"],"sources":["C:/Users/modes/Desktop/pokemon-app/frontend/pokemon-react-app/src/actions/catchPokemonAction.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const CATCH_POKEMON_REQUEST = 'CATCH_POKEMON_REQUEST';\r\nexport const CATCH_POKEMON_SUCCESS = 'CATCH_POKEMON_SUCCESS';\r\nexport const CATCH_POKEMON_FAILURE = 'CATCH_POKEMON_FAILURE';\r\nexport const RETRIEVE_POKEMON_SUCCESS = 'RETRIEVE_POKEMON_SUCCESS';\r\nexport const RETRIEVE_POKEMON_FAILURE = 'RETRIEVE_POKEMON_FAILURE';\r\nexport const UPDATE_CAUGHT_POKEMON = 'UPDATE_CAUGHT_POKEMON';\r\n\r\nexport const updateCaughtPokemonAction = (data) => ({\r\n  \r\n})\r\n\r\nexport const retrievePokemonSuccess = (data) => ({\r\n  type: RETRIEVE_POKEMON_SUCCESS,\r\n  payload: data\r\n})\r\n\r\nexport const retrievePokemonFailure = (error) => ({\r\n  type: RETRIEVE_POKEMON_FAILURE,\r\n  payload: error\r\n})\r\n\r\nexport const catchPokemonRequest = () => ({\r\n  type: CATCH_POKEMON_REQUEST,\r\n});\r\n\r\nexport const catchPokemonSuccess = (isCaught) => ({\r\n  type: CATCH_POKEMON_SUCCESS,\r\n  payload: isCaught,\r\n});\r\n\r\nexport const catchPokemonFailure = (error) => ({\r\n  type: CATCH_POKEMON_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const retrieveCaughtPokemonAction = (caught_by_user) => async (dispatch) => {\r\n  try {\r\n    dispatch(catchPokemonRequest());\r\n    const res = await axios.get(\"http://localhost:3001/api/caughtPokemon\", {\r\n      caught_by_user: caught_by_user\r\n    })\r\n    const data = await res.json();\r\n    dispatch(retrievePokemonSuccess(data));\r\n    // return res.data\r\n  } catch (error) {\r\n    dispatch(retrievePokemonFailure(error.message));\r\n  }\r\n}\r\n\r\nexport const catchPokemonAction = (pokemonId, pokemonName, pokemonSprite, caught_by_user) => async (dispatch) => {\r\n  try {\r\n    dispatch(catchPokemonRequest());\r\n\r\n    // console.log(\"in catchPokemonAction\");\r\n    // console.log(pokemonId, pokemonName, pokemonSprite, caught_by_user);\r\n\r\n    \r\n      \r\n      const res = await axios.post(\"http://localhost:3001/api/caughtPokemon\", {\r\n        pokemon_name: pokemonName,\r\n        pokemon_id: pokemonId,\r\n        url_to_sprite: pokemonSprite,\r\n        caught_by_user: caught_by_user\r\n      });\r\n      \r\n      // console.log(res.data);\r\n      // setUser(res.data);\r\n      \r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n\r\n\r\n  //   // Add your catch logic here\r\n  //   const isCaught = Math.random() < 0.5; // For example, 50% chance of success\r\n\r\n  //   dispatch(catchPokemonSuccess(isCaught));\r\n  // } catch (error) {\r\n  //   dispatch(catchPokemonFailure(error.message));\r\n  // }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,wBAAwB,GAAG,0BAA0B;AAClE,OAAO,MAAMC,wBAAwB,GAAG,0BAA0B;AAClE,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAE5D,OAAO,MAAMC,yBAAyB,GAAIC,IAAI,KAAM,CAEpD,CAAC,CAAC;AAEF,OAAO,MAAMC,sBAAsB,GAAID,IAAI,KAAM;EAC/CE,IAAI,EAAEN,wBAAwB;EAC9BO,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,MAAMI,sBAAsB,GAAIC,KAAK,KAAM;EAChDH,IAAI,EAAEL,wBAAwB;EAC9BM,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,MAAO;EACxCJ,IAAI,EAAET;AACR,CAAC,CAAC;AAEF,OAAO,MAAMc,mBAAmB,GAAIC,QAAQ,KAAM;EAChDN,IAAI,EAAER,qBAAqB;EAC3BS,OAAO,EAAEK;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAIJ,KAAK,KAAM;EAC7CH,IAAI,EAAEP,qBAAqB;EAC3BQ,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMK,2BAA2B,GAAIC,cAAc,IAAK,MAAOC,QAAQ,IAAK;EACjF,IAAI;IACFA,QAAQ,CAACN,mBAAmB,CAAC,CAAC,CAAC;IAC/B,MAAMO,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,yCAAyC,EAAE;MACrEH,cAAc,EAAEA;IAClB,CAAC,CAAC;IACF,MAAMX,IAAI,GAAG,MAAMa,GAAG,CAACE,IAAI,CAAC,CAAC;IAC7BH,QAAQ,CAACX,sBAAsB,CAACD,IAAI,CAAC,CAAC;IACtC;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdO,QAAQ,CAACR,sBAAsB,CAACC,KAAK,CAACW,OAAO,CAAC,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,SAAS,EAAEC,WAAW,EAAEC,aAAa,EAAET,cAAc,KAAK,MAAOC,QAAQ,IAAK;EAC/G,IAAI;IACFA,QAAQ,CAACN,mBAAmB,CAAC,CAAC,CAAC;;IAE/B;IACA;;IAIE,MAAMO,GAAG,GAAG,MAAMrB,KAAK,CAAC6B,IAAI,CAAC,yCAAyC,EAAE;MACtEC,YAAY,EAAEH,WAAW;MACzBI,UAAU,EAAEL,SAAS;MACrBM,aAAa,EAAEJ,aAAa;MAC5BT,cAAc,EAAEA;IAClB,CAAC,CAAC;;IAEF;IACA;EAEF,CAAC,CAAC,OAAON,KAAK,EAAE;IACdoB,OAAO,CAACC,GAAG,CAACrB,KAAK,CAACW,OAAO,CAAC;EAC5B;;EAGF;EACA;;EAEA;EACA;EACA;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}